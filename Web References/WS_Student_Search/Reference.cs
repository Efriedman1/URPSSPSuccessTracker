//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace URPSSPSuccessTracker.WS_Student_Search {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WS_StudentSoap", Namespace="http://wsw.temple.edu/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MeritScholarEntry[]))]
    public partial class WS_Student : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCurrentTermOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTermByTermCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTermByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonalInfoByAccessNetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAcademicInfoByTUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactInfoByTUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeritScholarEligibleStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMeritScholarEligibilityByTUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentsRegisteredCourseByCrnAndTermOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WS_Student() {
            this.Url = global::URPSSPSuccessTracker.Properties.Settings.Default.URPSSPSuccessTracker_WS_Student_Search_WS_Student;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCurrentTermCompletedEventHandler GetCurrentTermCompleted;
        
        /// <remarks/>
        public event GetTermByTermCodeCompletedEventHandler GetTermByTermCodeCompleted;
        
        /// <remarks/>
        public event GetTermByDateCompletedEventHandler GetTermByDateCompleted;
        
        /// <remarks/>
        public event GetPersonalInfoByAccessNetCompletedEventHandler GetPersonalInfoByAccessNetCompleted;
        
        /// <remarks/>
        public event GetAcademicInfoByTUIDCompletedEventHandler GetAcademicInfoByTUIDCompleted;
        
        /// <remarks/>
        public event GetContactInfoByTUIDCompletedEventHandler GetContactInfoByTUIDCompleted;
        
        /// <remarks/>
        public event GetMeritScholarEligibleStudentsCompletedEventHandler GetMeritScholarEligibleStudentsCompleted;
        
        /// <remarks/>
        public event CheckMeritScholarEligibilityByTUIDCompletedEventHandler CheckMeritScholarEligibilityByTUIDCompleted;
        
        /// <remarks/>
        public event GetStudentsRegisteredCourseByCrnAndTermCompletedEventHandler GetStudentsRegisteredCourseByCrnAndTermCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsw.temple.edu/GetCurrentTerm", RequestNamespace="http://wsw.temple.edu/", ResponseNamespace="http://wsw.temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetCurrentTerm(string username, string password) {
            object[] results = this.Invoke("GetCurrentTerm", new object[] {
                        username,
                        password});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentTermAsync(string username, string password) {
            this.GetCurrentTermAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetCurrentTermAsync(string username, string password, object userState) {
            if ((this.GetCurrentTermOperationCompleted == null)) {
                this.GetCurrentTermOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentTermOperationCompleted);
            }
            this.InvokeAsync("GetCurrentTerm", new object[] {
                        username,
                        password}, this.GetCurrentTermOperationCompleted, userState);
        }
        
        private void OnGetCurrentTermOperationCompleted(object arg) {
            if ((this.GetCurrentTermCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentTermCompleted(this, new GetCurrentTermCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsw.temple.edu/GetTermByTermCode", RequestNamespace="http://wsw.temple.edu/", ResponseNamespace="http://wsw.temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetTermByTermCode(string username, string password, string termCode) {
            object[] results = this.Invoke("GetTermByTermCode", new object[] {
                        username,
                        password,
                        termCode});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetTermByTermCodeAsync(string username, string password, string termCode) {
            this.GetTermByTermCodeAsync(username, password, termCode, null);
        }
        
        /// <remarks/>
        public void GetTermByTermCodeAsync(string username, string password, string termCode, object userState) {
            if ((this.GetTermByTermCodeOperationCompleted == null)) {
                this.GetTermByTermCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTermByTermCodeOperationCompleted);
            }
            this.InvokeAsync("GetTermByTermCode", new object[] {
                        username,
                        password,
                        termCode}, this.GetTermByTermCodeOperationCompleted, userState);
        }
        
        private void OnGetTermByTermCodeOperationCompleted(object arg) {
            if ((this.GetTermByTermCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTermByTermCodeCompleted(this, new GetTermByTermCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsw.temple.edu/GetTermByDate", RequestNamespace="http://wsw.temple.edu/", ResponseNamespace="http://wsw.temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetTermByDate(string username, string password, string date) {
            object[] results = this.Invoke("GetTermByDate", new object[] {
                        username,
                        password,
                        date});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetTermByDateAsync(string username, string password, string date) {
            this.GetTermByDateAsync(username, password, date, null);
        }
        
        /// <remarks/>
        public void GetTermByDateAsync(string username, string password, string date, object userState) {
            if ((this.GetTermByDateOperationCompleted == null)) {
                this.GetTermByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTermByDateOperationCompleted);
            }
            this.InvokeAsync("GetTermByDate", new object[] {
                        username,
                        password,
                        date}, this.GetTermByDateOperationCompleted, userState);
        }
        
        private void OnGetTermByDateOperationCompleted(object arg) {
            if ((this.GetTermByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTermByDateCompleted(this, new GetTermByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsw.temple.edu/GetPersonalInfoByAccessNet", RequestNamespace="http://wsw.temple.edu/", ResponseNamespace="http://wsw.temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetPersonalInfoByAccessNet(string username, string password, string AccessNet) {
            object[] results = this.Invoke("GetPersonalInfoByAccessNet", new object[] {
                        username,
                        password,
                        AccessNet});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonalInfoByAccessNetAsync(string username, string password, string AccessNet) {
            this.GetPersonalInfoByAccessNetAsync(username, password, AccessNet, null);
        }
        
        /// <remarks/>
        public void GetPersonalInfoByAccessNetAsync(string username, string password, string AccessNet, object userState) {
            if ((this.GetPersonalInfoByAccessNetOperationCompleted == null)) {
                this.GetPersonalInfoByAccessNetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonalInfoByAccessNetOperationCompleted);
            }
            this.InvokeAsync("GetPersonalInfoByAccessNet", new object[] {
                        username,
                        password,
                        AccessNet}, this.GetPersonalInfoByAccessNetOperationCompleted, userState);
        }
        
        private void OnGetPersonalInfoByAccessNetOperationCompleted(object arg) {
            if ((this.GetPersonalInfoByAccessNetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonalInfoByAccessNetCompleted(this, new GetPersonalInfoByAccessNetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsw.temple.edu/GetAcademicInfoByTUID", RequestNamespace="http://wsw.temple.edu/", ResponseNamespace="http://wsw.temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetAcademicInfoByTUID(string username, string password, string tuid) {
            object[] results = this.Invoke("GetAcademicInfoByTUID", new object[] {
                        username,
                        password,
                        tuid});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetAcademicInfoByTUIDAsync(string username, string password, string tuid) {
            this.GetAcademicInfoByTUIDAsync(username, password, tuid, null);
        }
        
        /// <remarks/>
        public void GetAcademicInfoByTUIDAsync(string username, string password, string tuid, object userState) {
            if ((this.GetAcademicInfoByTUIDOperationCompleted == null)) {
                this.GetAcademicInfoByTUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAcademicInfoByTUIDOperationCompleted);
            }
            this.InvokeAsync("GetAcademicInfoByTUID", new object[] {
                        username,
                        password,
                        tuid}, this.GetAcademicInfoByTUIDOperationCompleted, userState);
        }
        
        private void OnGetAcademicInfoByTUIDOperationCompleted(object arg) {
            if ((this.GetAcademicInfoByTUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAcademicInfoByTUIDCompleted(this, new GetAcademicInfoByTUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsw.temple.edu/GetContactInfoByTUID", RequestNamespace="http://wsw.temple.edu/", ResponseNamespace="http://wsw.temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetContactInfoByTUID(string username, string password, string tuid) {
            object[] results = this.Invoke("GetContactInfoByTUID", new object[] {
                        username,
                        password,
                        tuid});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetContactInfoByTUIDAsync(string username, string password, string tuid) {
            this.GetContactInfoByTUIDAsync(username, password, tuid, null);
        }
        
        /// <remarks/>
        public void GetContactInfoByTUIDAsync(string username, string password, string tuid, object userState) {
            if ((this.GetContactInfoByTUIDOperationCompleted == null)) {
                this.GetContactInfoByTUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactInfoByTUIDOperationCompleted);
            }
            this.InvokeAsync("GetContactInfoByTUID", new object[] {
                        username,
                        password,
                        tuid}, this.GetContactInfoByTUIDOperationCompleted, userState);
        }
        
        private void OnGetContactInfoByTUIDOperationCompleted(object arg) {
            if ((this.GetContactInfoByTUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactInfoByTUIDCompleted(this, new GetContactInfoByTUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsw.temple.edu/GetMeritScholarEligibleStudents", RequestNamespace="http://wsw.temple.edu/", ResponseNamespace="http://wsw.temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetMeritScholarEligibleStudents(string username, string password) {
            object[] results = this.Invoke("GetMeritScholarEligibleStudents", new object[] {
                        username,
                        password});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeritScholarEligibleStudentsAsync(string username, string password) {
            this.GetMeritScholarEligibleStudentsAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetMeritScholarEligibleStudentsAsync(string username, string password, object userState) {
            if ((this.GetMeritScholarEligibleStudentsOperationCompleted == null)) {
                this.GetMeritScholarEligibleStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeritScholarEligibleStudentsOperationCompleted);
            }
            this.InvokeAsync("GetMeritScholarEligibleStudents", new object[] {
                        username,
                        password}, this.GetMeritScholarEligibleStudentsOperationCompleted, userState);
        }
        
        private void OnGetMeritScholarEligibleStudentsOperationCompleted(object arg) {
            if ((this.GetMeritScholarEligibleStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeritScholarEligibleStudentsCompleted(this, new GetMeritScholarEligibleStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsw.temple.edu/CheckMeritScholarEligibilityByTUID", RequestNamespace="http://wsw.temple.edu/", ResponseNamespace="http://wsw.temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result CheckMeritScholarEligibilityByTUID(string username, string password, string tuid) {
            object[] results = this.Invoke("CheckMeritScholarEligibilityByTUID", new object[] {
                        username,
                        password,
                        tuid});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void CheckMeritScholarEligibilityByTUIDAsync(string username, string password, string tuid) {
            this.CheckMeritScholarEligibilityByTUIDAsync(username, password, tuid, null);
        }
        
        /// <remarks/>
        public void CheckMeritScholarEligibilityByTUIDAsync(string username, string password, string tuid, object userState) {
            if ((this.CheckMeritScholarEligibilityByTUIDOperationCompleted == null)) {
                this.CheckMeritScholarEligibilityByTUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMeritScholarEligibilityByTUIDOperationCompleted);
            }
            this.InvokeAsync("CheckMeritScholarEligibilityByTUID", new object[] {
                        username,
                        password,
                        tuid}, this.CheckMeritScholarEligibilityByTUIDOperationCompleted, userState);
        }
        
        private void OnCheckMeritScholarEligibilityByTUIDOperationCompleted(object arg) {
            if ((this.CheckMeritScholarEligibilityByTUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMeritScholarEligibilityByTUIDCompleted(this, new CheckMeritScholarEligibilityByTUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wsw.temple.edu/GetStudentsRegisteredCourseByCrnAndTerm", RequestNamespace="http://wsw.temple.edu/", ResponseNamespace="http://wsw.temple.edu/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetStudentsRegisteredCourseByCrnAndTerm(string username, string password, string term, string crns) {
            object[] results = this.Invoke("GetStudentsRegisteredCourseByCrnAndTerm", new object[] {
                        username,
                        password,
                        term,
                        crns});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentsRegisteredCourseByCrnAndTermAsync(string username, string password, string term, string crns) {
            this.GetStudentsRegisteredCourseByCrnAndTermAsync(username, password, term, crns, null);
        }
        
        /// <remarks/>
        public void GetStudentsRegisteredCourseByCrnAndTermAsync(string username, string password, string term, string crns, object userState) {
            if ((this.GetStudentsRegisteredCourseByCrnAndTermOperationCompleted == null)) {
                this.GetStudentsRegisteredCourseByCrnAndTermOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentsRegisteredCourseByCrnAndTermOperationCompleted);
            }
            this.InvokeAsync("GetStudentsRegisteredCourseByCrnAndTerm", new object[] {
                        username,
                        password,
                        term,
                        crns}, this.GetStudentsRegisteredCourseByCrnAndTermOperationCompleted, userState);
        }
        
        private void OnGetStudentsRegisteredCourseByCrnAndTermOperationCompleted(object arg) {
            if ((this.GetStudentsRegisteredCourseByCrnAndTermCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentsRegisteredCourseByCrnAndTermCompleted(this, new GetStudentsRegisteredCourseByCrnAndTermCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wsw.temple.edu/")]
    public partial class Result {
        
        private string statusField;
        
        private Term[] termsField;
        
        private Student[] studentsField;
        
        private MeritScholarEntry[] meritScholarField;
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public Term[] Terms {
            get {
                return this.termsField;
            }
            set {
                this.termsField = value;
            }
        }
        
        /// <remarks/>
        public Student[] Students {
            get {
                return this.studentsField;
            }
            set {
                this.studentsField = value;
            }
        }
        
        /// <remarks/>
        public MeritScholarEntry[] MeritScholar {
            get {
                return this.meritScholarField;
            }
            set {
                this.meritScholarField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wsw.temple.edu/")]
    public partial class Term {
        
        private string codeField;
        
        private string nameField;
        
        private string startDateField;
        
        private string endDateField;
        
        /// <remarks/>
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wsw.temple.edu/")]
    public partial class MeritScholarEntry {
        
        private string tuidField;
        
        private object eligibilityField;
        
        /// <remarks/>
        public string tuid {
            get {
                return this.tuidField;
            }
            set {
                this.tuidField = value;
            }
        }
        
        /// <remarks/>
        public object eligibility {
            get {
                return this.eligibilityField;
            }
            set {
                this.eligibilityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wsw.temple.edu/")]
    public partial class Student {
        
        private string prefixField;
        
        private string suffixField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string middleInitialField;
        
        private string tuidField;
        
        private string uidField;
        
        private string emailField;
        
        private string personalCellNumberField;
        
        private string collegeField;
        
        private string degreeField;
        
        private string admitTermField;
        
        private string major1Field;
        
        private string department1Field;
        
        private string major2Field;
        
        private string department2Field;
        
        private string minorField;
        
        private string expectedGraduationTermField;
        
        private string collegeCodeField;
        
        private string degreeCodeField;
        
        private string major1CodeField;
        
        private string department1CodeField;
        
        private string major2CodeField;
        
        private string department2CodeField;
        
        private string minorCodeField;
        
        /// <remarks/>
        public string prefix {
            get {
                return this.prefixField;
            }
            set {
                this.prefixField = value;
            }
        }
        
        /// <remarks/>
        public string suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string middleInitial {
            get {
                return this.middleInitialField;
            }
            set {
                this.middleInitialField = value;
            }
        }
        
        /// <remarks/>
        public string tuid {
            get {
                return this.tuidField;
            }
            set {
                this.tuidField = value;
            }
        }
        
        /// <remarks/>
        public string uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string personalCellNumber {
            get {
                return this.personalCellNumberField;
            }
            set {
                this.personalCellNumberField = value;
            }
        }
        
        /// <remarks/>
        public string college {
            get {
                return this.collegeField;
            }
            set {
                this.collegeField = value;
            }
        }
        
        /// <remarks/>
        public string degree {
            get {
                return this.degreeField;
            }
            set {
                this.degreeField = value;
            }
        }
        
        /// <remarks/>
        public string admitTerm {
            get {
                return this.admitTermField;
            }
            set {
                this.admitTermField = value;
            }
        }
        
        /// <remarks/>
        public string major1 {
            get {
                return this.major1Field;
            }
            set {
                this.major1Field = value;
            }
        }
        
        /// <remarks/>
        public string department1 {
            get {
                return this.department1Field;
            }
            set {
                this.department1Field = value;
            }
        }
        
        /// <remarks/>
        public string major2 {
            get {
                return this.major2Field;
            }
            set {
                this.major2Field = value;
            }
        }
        
        /// <remarks/>
        public string department2 {
            get {
                return this.department2Field;
            }
            set {
                this.department2Field = value;
            }
        }
        
        /// <remarks/>
        public string minor {
            get {
                return this.minorField;
            }
            set {
                this.minorField = value;
            }
        }
        
        /// <remarks/>
        public string expectedGraduationTerm {
            get {
                return this.expectedGraduationTermField;
            }
            set {
                this.expectedGraduationTermField = value;
            }
        }
        
        /// <remarks/>
        public string collegeCode {
            get {
                return this.collegeCodeField;
            }
            set {
                this.collegeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string degreeCode {
            get {
                return this.degreeCodeField;
            }
            set {
                this.degreeCodeField = value;
            }
        }
        
        /// <remarks/>
        public string major1Code {
            get {
                return this.major1CodeField;
            }
            set {
                this.major1CodeField = value;
            }
        }
        
        /// <remarks/>
        public string department1Code {
            get {
                return this.department1CodeField;
            }
            set {
                this.department1CodeField = value;
            }
        }
        
        /// <remarks/>
        public string major2Code {
            get {
                return this.major2CodeField;
            }
            set {
                this.major2CodeField = value;
            }
        }
        
        /// <remarks/>
        public string department2Code {
            get {
                return this.department2CodeField;
            }
            set {
                this.department2CodeField = value;
            }
        }
        
        /// <remarks/>
        public string minorCode {
            get {
                return this.minorCodeField;
            }
            set {
                this.minorCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetCurrentTermCompletedEventHandler(object sender, GetCurrentTermCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentTermCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentTermCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetTermByTermCodeCompletedEventHandler(object sender, GetTermByTermCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTermByTermCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTermByTermCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetTermByDateCompletedEventHandler(object sender, GetTermByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTermByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTermByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetPersonalInfoByAccessNetCompletedEventHandler(object sender, GetPersonalInfoByAccessNetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonalInfoByAccessNetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonalInfoByAccessNetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAcademicInfoByTUIDCompletedEventHandler(object sender, GetAcademicInfoByTUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAcademicInfoByTUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAcademicInfoByTUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetContactInfoByTUIDCompletedEventHandler(object sender, GetContactInfoByTUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactInfoByTUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactInfoByTUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetMeritScholarEligibleStudentsCompletedEventHandler(object sender, GetMeritScholarEligibleStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeritScholarEligibleStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeritScholarEligibleStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckMeritScholarEligibilityByTUIDCompletedEventHandler(object sender, CheckMeritScholarEligibilityByTUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMeritScholarEligibilityByTUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMeritScholarEligibilityByTUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetStudentsRegisteredCourseByCrnAndTermCompletedEventHandler(object sender, GetStudentsRegisteredCourseByCrnAndTermCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentsRegisteredCourseByCrnAndTermCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentsRegisteredCourseByCrnAndTermCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591